import java.io.*;
import java.util.*;
//Name:Sahen Rai
//Description: Program that allows you to generate random verbs,adjectives, and nouns as inspiration for poetry or other written work
//Date:12/17/16
        
public class Generator extends javax.swing.JFrame {


        
    public Generator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        nounsLabel = new javax.swing.JLabel();
        verbsLabel = new javax.swing.JLabel();
        nounsTextField = new javax.swing.JTextField();
        adjectivesLabel = new javax.swing.JLabel();
        adjectivesTextField = new javax.swing.JTextField();
        verbsTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        textenterArea = new javax.swing.JTextArea();
        adjectivesButton = new javax.swing.JButton();
        nounsButton = new javax.swing.JButton();
        verbsButton = new javax.swing.JButton();
        titleGenerator = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        exportMenu = new javax.swing.JMenuItem();
        exitMenu = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nounsLabel.setText("Nouns");

        verbsLabel.setText("Verbs");

        nounsTextField.setText("         ");

        adjectivesLabel.setText("Adjectives");

        adjectivesTextField.setText("     ");

        verbsTextField.setText("           ");

        textenterArea.setColumns(20);
        textenterArea.setRows(5);
        jScrollPane1.setViewportView(textenterArea);

        adjectivesButton.setText("Enter");
        adjectivesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adjectivesButtonActionPerformed(evt);
            }
        });

        nounsButton.setText("Enter");
        nounsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nounsButtonActionPerformed(evt);
            }
        });

        verbsButton.setText("Enter");
        verbsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verbsButtonActionPerformed(evt);
            }
        });

        titleGenerator.setText("Poetry Word Generator");

        jMenu2.setText("File");

        exportMenu.setText("Export Text");
        exportMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportMenuActionPerformed(evt);
            }
        });
        jMenu2.add(exportMenu);

        exitMenu.setText("Exit");
        exitMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuActionPerformed(evt);
            }
        });
        jMenu2.add(exitMenu);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Edit");
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(adjectivesLabel)
                            .addComponent(nounsLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(adjectivesTextField)
                            .addComponent(nounsTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                            .addComponent(verbsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(verbsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(504, 504, 504))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nounsButton)
                                    .addComponent(adjectivesButton))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(verbsLabel)
                        .addGap(389, 389, 389))))
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(titleGenerator)
                .addGap(286, 286, 286))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titleGenerator)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adjectivesLabel)
                    .addComponent(adjectivesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adjectivesButton))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nounsLabel)
                    .addComponent(nounsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nounsButton))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(verbsLabel)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(verbsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(verbsButton)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//Listener for adjective button
    private void adjectivesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adjectivesButtonActionPerformed
        //Takes adjectives from text file, adds them to array, and adds that array to the text field
        
        try{
            
            
        String [] adjectives = processFile("adjectives.txt");
        textenterArea.append("Adjectives:");
        
        printrandomArray(adjectives,Integer.parseInt(adjectivesTextField.getText().trim()));
            
        }
        catch(IOException e){
        
        System.out.print(e);
        
        }
        
        
        
         
        
        
        
      
        
    }//GEN-LAST:event_adjectivesButtonActionPerformed
//Listener for adjective button
                                                      
    private void nounsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nounsButtonActionPerformed
                                                 
        //Takes nouns from text file, adds them to array, and adds that array to the text field
          
        try{
            
            
        String [] nouns = processFile("nouns.txt");
        textenterArea.append("Nouns:");
        printrandomArray(nouns,Integer.parseInt(nounsTextField.getText().trim()));
            
        }
        catch(IOException e){
        
        System.out.print(e);
        
        }
        
        
        
         
    }//GEN-LAST:event_nounsButtonActionPerformed
//Listener for adjective button
                               
    private void verbsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verbsButtonActionPerformed
       try{
            
 //Takes nouns from text file, adds them to array, and adds that array to the text field           
        String [] verbs = processFile("verbs.txt");
        textenterArea.append("Verbs:");
        
        printrandomArray(verbs,Integer.parseInt(verbsTextField.getText().trim()));
            
        }
        catch(IOException e){
        
        System.out.print(e);
        
        }
        
        
        
         
        
        
        
      
        
                                                 

    }//GEN-LAST:event_verbsButtonActionPerformed
//Method to quit the program from the menu
    private void exitMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuActionPerformed
//Listener to export the contents of the text field to a file
    private void exportMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportMenuActionPerformed
        try{
            writeFile("export.txt");
            
        }
        catch(IOException e){
        
        System.out.println(e);
            
        }
    }//GEN-LAST:event_exportMenuActionPerformed

    /**
     * @param args the command line arguments
     */
 //Method to generate a random integer in a range   
    public static int randomInt(int low, int high){


  
    Random rand = new Random();

 
    int randomNum = rand.nextInt((high - low) + 1) + low;

    return randomNum;
}
//Method to write contents of textfield to file

 public  void writeFile (String s)throws IOException{
    
    BufferedWriter output = new BufferedWriter(new FileWriter(s));
        
        output.write(textenterArea.getText());
        
        output.flush();
        
        output.close();
      
      
     
      
    
    
    }
    //Method to print random values of an array to the text field
     
    
    public void  printrandomArray(String [] r, int x){

    textenterArea.append(" ");
    for(int i =0; i<x;i++)
    {
    
    
   textenterArea.append(r[randomInt(0,r.length-1)]+",");
    
    
    
    
    
    }
     textenterArea.append("\n");
    }
    
    

    //Method to process the text files and create an array of the values
   
    public static String [] processFile (String filename)throws IOException,FileNotFoundException {
   String line;
   
   BufferedReader inputFile = new BufferedReader (new InputStreamReader(new FileInputStream(filename)));
 
 
   List list = new ArrayList();
   
   
   
   
   
   int i = 0;
   
   while(inputFile.readLine()!=null){
   
    
    
   line=inputFile.readLine();
     
   
   list.add(line);
   i++;
   
  
 
   
 
   
   }
   
   
   
   String [] array = new String[list.size()];
   
        for (int s = 0; s < list.size(); s++) {
            array[s] = (String) list.get(s);
            
        }
  
return array;
}
    public static void main(String args[]) throws IOException{
    
        
        
        
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Generator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Generator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Generator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Generator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Generator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adjectivesButton;
    private javax.swing.JLabel adjectivesLabel;
    private javax.swing.JTextField adjectivesTextField;
    private javax.swing.JMenuItem exitMenu;
    private javax.swing.JMenuItem exportMenu;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton nounsButton;
    private javax.swing.JLabel nounsLabel;
    private javax.swing.JTextField nounsTextField;
    private javax.swing.JTextArea textenterArea;
    private javax.swing.JLabel titleGenerator;
    private javax.swing.JButton verbsButton;
    private javax.swing.JLabel verbsLabel;
    private javax.swing.JTextField verbsTextField;
    // End of variables declaration//GEN-END:variables
}
